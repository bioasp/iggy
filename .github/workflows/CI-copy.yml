name: CI copy

on:
  push:
  pull_request:

env:
  MACOSX_DEPLOYMENT_TARGET: "11.0"

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: [3.8]
        # python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v2

      # # First build with cargo otherwise no native static clingo lib is found ???
      # - name: Cargo build
      #   run: cargo build --release --verbose

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Install Maturin
        run: python -m pip install --upgrade maturin

      - name: Build wheel with Maturin - Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd python-module
          maturin list-python
          maturin build --release --out target/wheels --interpreter python${{matrix.python-version}}
          ls -las target/wheels
        shell: bash

      - name: Build wheel with Maturin - Non-Linux
        if: "!startsWith(matrix.os, 'ubuntu')"
        run: |
          cd python-module
          maturin list-python
          maturin build --release --out target/wheels --interpreter python${{matrix.python-version}}
          ls -las target/wheels
          cp target/wheels/*.whl .
        shell: bash

      # - name: Upload wheels
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: wheels
      #     path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [macos, windows, linux]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: messense/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
