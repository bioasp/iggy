name: CI python package

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        # python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
      - uses: actions/checkout@v2

      # First build with cargo otherwise no native static clingo lib is found ???
      - name: Cargo build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --verbose

      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist --interpreter python${{matrix.python-version}}

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: messense/maturin-action@v1
  #       with:
  #         command: build
  #         args: --release --no-sdist -o dist
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # macos:
  #   env:
  #     MACOSX_DEPLOYMENT_TARGET: "11.0"

  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     # First build with cargo otherwise no native static clingo lib is found ???
  #     - name: Cargo build
  #       run: |
  #         cargo build --release --verbose

  #     - uses: messense/maturin-action@v1
  #       with:
  #         command: build
  #         args: --release --no-sdist -o dist --universal2
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [macos, windows, linux]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: messense/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
